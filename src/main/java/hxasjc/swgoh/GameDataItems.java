package hxasjc.swgoh;

import java.util.Set;

public enum GameDataItems {
    NONE(0),
    CATEGORY_DEFINITION(1),
    UNLOCK_ANNOUNCEMENT(2),
    SKILL_DEFINITIONS(4),
    EQUIPMENT_DEFINITIONS(8),
    BATTLE_EFFECT_DEFINITION(16),
    ALL_TABLES(32),
    ENVIRONMENT_DEFINITION(64),
    EVENT_SAMPLING(128),
    BATTLE_TARGETING_SETS(256),
    REQUIREMENTS(512),
    POWER_UP_BUNDLES(1024),
    GUILD_BANNER_DEFINITION(2048),
    BATTLE_TARGETING_RULES(4096),
    PERSISTENT_VFX(8192),
    CRAFTING_MATERIAL_DEFINITIONS(16384),
    PLAYER_TITLE_DEFINITIONS(32768),
    PLAYER_PORTRAIT_DEFINITIONS(65536),
    TIME_ZONE_CHANGE_CONFIG(131072),
    ENVIRONMENT_COLLECTIONS(262144),
    PERSISTENT_EFFECT_PRIORITIES(524288),
    SOCIAL_STATUS(1048576),
    ABILITY_DEFINITIONS(2097152),
    STAT_PROGRESSION(4194304),
    CHALLENGE(8388608),
    WAR_DEFINITIONS(16777216),
    STAT_MOD(33554432),
    RECIPE_DEFINITIONS(67108864),
    MOD_RECOMMENDATIONS(134217728),
    SCAVENGER_CONVERSION_SETS(268435456),
    GUILD(536870912),
    MYSTERY(1073741824),
    COOLDOWN_DEFINITIONS(2147483648L),
    DAILY_ACTION_CAP_DEFINITIONS(4294967296L),
    ENERGY_REWARDS(8589934592L),
    UNIT_GUIDE_DEFINITIONS(17179869184L),
    GALACTIC_BUNDLE_DEFINITIONS(34359738368L),
    RELIC_TIER_DEFINITIONS(68719476736L),
    UNIT_DEFINITIONS(137438953472L),
    CAMPAIGN_DEFINITIONS(274877906944L),
    CONQUEST(549755813888L),
    ABILITY_DECISION_TREES(1099511627776L),
    RECOMMENDED_SQUADS(2199023255552L),
    UNIT_GUIDE_LAYOUTS(4398046511104L),
    DAILY_LOGIN_REWARD_DEFINITIONS(8796093022208L),
    CALENDAR_CATEGORIES(17592186044416L),
    TERRITORY_TOURNAMENT_DAILY_REWARDS(35184372088832L),
    DATACRON_DEFINITIONS(70368744177664L),
    DISPLAYABLE_ENEMY_DEFINITIONS(140737488355328L),
    HELP(-9223372036854775808L),
    SEGMENT_1(2097151L),
    SEGMENT_2(68717379584L),
    SEGMENT_3(206158430208L),
    SEGMENT_4(281200098803712L),
    UBS_UPDATE(2150109456L);

    private final long binary;

    GameDataItems(long binary) {
        this.binary = binary;
    }

    public static long sum(GameDataItems... items) {
        return Set.of(items).stream().mapToLong((item) -> item.binary).sum();
    }
}
